/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/css-loader/dist/cjs.js!./src/css/hero_banner.css":
/*!***********************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/css/hero_banner.css ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.i, \".hero-banner {\\r\\n    position: relative;\\r\\n    width: 100%;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n.hero-banner > .banner-wrapper {\\r\\n    position: relative;\\r\\n    width: 100%;\\r\\n    height: auto;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n.hero-banner > .banner-wrapper > .hero-banner-item {\\r\\n    position: relative;\\r\\n    float: left;\\r\\n}\\r\\n\\r\\n.hero-banner > .banner-wrapper > .hero-banner-item a,\\r\\n.hero-banner > .banner-wrapper > .hero-banner-item img {\\r\\n    display: block;\\r\\n    width: 100%;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.hero-banner > .nav-wrapper {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    width: 100%;\\r\\n    text-align: center;\\r\\n    pointer-events: none;\\r\\n}\\r\\n\\r\\n.hero-banner > .nav-wrapper > .nav-dot {\\r\\n    position: absolute;\\r\\n    bottom: 30px;\\r\\n    width: 100%;\\r\\n    text-align: center;\\r\\n    pointer-events: all;\\r\\n}\\r\\n\\r\\n.hero-banner > .nav-wrapper > .nav-dot > span {\\r\\n    display: inline-block;\\r\\n    width: 12px;\\r\\n    height: 12px;\\r\\n    border-radius: 12px;\\r\\n    margin-right: 10px;\\r\\n    cursor: pointer;\\r\\n    background: #fff;\\r\\n    opacity: .4;\\r\\n}\\r\\n\\r\\n.hero-banner > .nav-wrapper > .nav-dot > .nav-on {\\r\\n    opacity: 1;\\r\\n}\\r\\n\\r\\n.hero-banner > .nav-wrapper > .nav-arrow {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    visibility: hidden;\\r\\n    opacity: 0;\\r\\n    transition: 0.5s;\\r\\n}\\r\\n\\r\\n.hero-banner > .nav-wrapper > .nav-arrow > .nav-arrow-right,\\r\\n.hero-banner > .nav-wrapper > .nav-arrow > .nav-arrow-left {\\r\\n    position: absolute;\\r\\n    top: 50%;\\r\\n    width: 50px;\\r\\n    height: 50px;\\r\\n    border-style: solid;\\r\\n    border-width: 2px;\\r\\n    border-color: #ffffff;\\r\\n    border-radius: 50%;\\r\\n    padding: 17px 17px 15px 15px;\\r\\n    margin-top: -30px;\\r\\n    font-size: 0;\\r\\n    visibility: visible;\\r\\n    cursor: pointer;\\r\\n    pointer-events: all;\\r\\n}\\r\\n\\r\\n.hero-banner > .nav-wrapper > .nav-arrow > .nav-arrow-left {\\r\\n    left: 3%;\\r\\n    transform: rotate(-135deg);\\r\\n}\\r\\n\\r\\n.hero-banner > .nav-wrapper > .nav-arrow > .nav-arrow-right {\\r\\n    right: 3%;\\r\\n    transform: rotate(45deg);\\r\\n}\\r\\n\\r\\n.hero-banner > .nav-wrapper > .nav-arrow > .nav-arrow-right::before,\\r\\n.hero-banner > .nav-wrapper > .nav-arrow > .nav-arrow-left::before {\\r\\n    content: \\\"\\\";\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    border-style: solid;\\r\\n    border-width: 3px 3px 0 0;\\r\\n    border-color: #ffffff;\\r\\n    display: block;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.hero-banner > .nav-wrapper > .nav-arrow > .nav-arrow-right:hover::before,\\r\\n.hero-banner > .nav-wrapper > .nav-arrow > .nav-arrow-left:hover::before {\\r\\n    transform: scale(1.2);\\r\\n    transition: 0.3s;\\r\\n}\\r\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n\n\n//# sourceURL=webpack:///./src/css/hero_banner.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/css/main.css":
/*!****************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/css/main.css ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.i, \"html, body {\\r\\n    box-sizing: border-box;\\r\\n    padding: 0;\\r\\n    text-align: center;\\r\\n    max-width: 1180px;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\n*, *:before, *:after {\\r\\n    box-sizing: inherit;\\r\\n}\\r\\n\\r\\n.clearfix:after {\\r\\n    content: '';\\r\\n    display: block;\\r\\n    clear: both;\\r\\n    float: none;\\r\\n}\\r\\n\\r\\n.title {\\r\\n    margin-bottom: 0;\\r\\n    text-align: center;\\r\\n    font-size: 30px;\\r\\n    color: #333;\\r\\n}\\r\\n\\r\\n.link, .link:visited {\\r\\n    display: inline-block;\\r\\n    margin: 20px 0;\\r\\n    color: #555;\\r\\n    text-decoration: none;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n.link:hover, .link:focus {\\r\\n    color: #9fd6c2;\\r\\n}\\r\\n\\r\\n/* container - body */\\r\\n#container {\\r\\n    width: 1000px;\\r\\n    margin: auto;\\r\\n}\\r\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n\n\n//# sourceURL=webpack:///./src/css/main.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}\n\n//# sourceURL=webpack:///./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : undefined;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./src/css/hero_banner.css":
/*!*********************************!*\
  !*** ./src/css/hero_banner.css ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var api = __webpack_require__(/*! ../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./hero_banner.css */ \"./node_modules/css-loader/dist/cjs.js!./src/css/hero_banner.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};\n\n//# sourceURL=webpack:///./src/css/hero_banner.css?");

/***/ }),

/***/ "./src/css/main.css":
/*!**************************!*\
  !*** ./src/css/main.css ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var api = __webpack_require__(/*! ../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./main.css */ \"./node_modules/css-loader/dist/cjs.js!./src/css/main.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};\n\n//# sourceURL=webpack:///./src/css/main.css?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _css_main_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./css/main.css */ \"./src/css/main.css\");\n/* harmony import */ var _css_main_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_main_css__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _css_hero_banner_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./css/hero_banner.css */ \"./src/css/hero_banner.css\");\n/* harmony import */ var _css_hero_banner_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_hero_banner_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _js_hero_banner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./js/hero_banner */ \"./src/js/hero_banner.js\");\n\r\n\r\n\r\n\r\n\r\nlet hero_banner = document.querySelector('.hero-banner');\r\n\r\nnew _js_hero_banner__WEBPACK_IMPORTED_MODULE_2__[\"default\"](hero_banner, {\r\n    url: 'https://e37cfac5-6a30-473f-9c3d-7394356cfa67.mock.pstmn.io/api/banners',\r\n    count: 4,\r\n    navPosition: 'bottom',\r\n    autoSlide: false,\r\n    autoSlideTime: 3000,\r\n    infinity: true\r\n});\r\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/js/hero_banner.js":
/*!*******************************!*\
  !*** ./src/js/hero_banner.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return HeroBanner; });\nclass HeroBanner {\r\n    constructor(element, options = {}) {\r\n        const thisBanner = this;\r\n        this.element = element; // #hero-banner\r\n\r\n        /* 다음은 각 옵션값들\r\n        * url: 가져오고자 하는 이미지의 API 요청 url\r\n        * count: 가져오고자 하는 배너이미지의 수\r\n        * navStyle: arrow일 땐 좌우 화살표만 표시, dot일 때는 하단 인디케이터만 표시, 아무값도 넣지 않았을 때는 둘다 표시\r\n        * autoSlide: 자동 슬라이드 여부\r\n        * autoSlideTime: 자동 슬라이드 시간\r\n        * infinity: 가장 마지막 배너에서 멈추지않고 처음 배너위치로 이동시킬지 여부\r\n        */\r\n        this.url = !options.url ? '' : options.url;\r\n        this.count = !options.count ? '1' : options.count;\r\n        this.navStyle = !options.navStyle ? '' : options.navStyle;\r\n        this.autoSlide = !options.autoSlide ? false : options.autoSlide;\r\n        this.autoSlideTime = !options.autoSlideTime ? 3000 : options.autoSlideTime;\r\n        this.infinity = !options.infinity && options.infinity !== false ? true : options.infinity;\r\n\r\n        // 자동슬라이드가 되는 도중 mouse관련 이벤트들이 실행될 때 autoSlideStatus를 통해 멈추게하는 변수:\r\n        this.autoSlideStatus = '';\r\n\r\n        // 현재 배너의 인덱스 값\r\n        this.BannerIndex = 0;\r\n        // getFirst는 각 함수들이 중복 실행되지 않기 위한 변수.\r\n        this.getFirst = true;\r\n\r\n        // 배너에서 마우스 드래그 시 이미지 복사, href의 url 복사를 방지하기 위함.\r\n        this.element.ondragstart = new Function(\"return false\");\r\n\r\n        // 편의성을 위해 다음과 같은 div들을 자동으로 미리 생성.\r\n        let appendBannerWrapper = document.createElement('div');\r\n        appendBannerWrapper.className = \"banner-wrapper\";\r\n        this.element.appendChild(appendBannerWrapper);\r\n        let appendNavWrapper = document.createElement('div');\r\n        appendNavWrapper.className = \"nav-wrapper\";\r\n        this.element.appendChild(appendNavWrapper);\r\n\r\n        for (let i = 0; i < this.count; i++) {\r\n            let appendBannerItem = document.createElement('div');\r\n            appendBannerItem.className = \"hero-banner-item\";\r\n            thisBanner.element.children[0].appendChild(appendBannerItem);\r\n        }\r\n\r\n        // 이미지를 가져오는 함수, 모두 가져오고 나서 nav를 생성하는 함수와 같은 기타 다른 함수들을 실행함.\r\n        this.getImage('desktop');\r\n        this.getImage('mobile');\r\n    }\r\n\r\n    // 이미지 가져오기\r\n    getImage(device) {\r\n        const thisBanner = this;\r\n        let bannerAry = [];\r\n\r\n        fetch(thisBanner.url + '?device='+device+'&count=' + thisBanner.count, {\r\n            method: 'get'\r\n        })\r\n            .then((res) => res.json())\r\n            .then(function (data) {\r\n                bannerAry = data;\r\n\r\n                for (let i = 0; i < bannerAry.length; i++) {\r\n                    let bannerImage = \"\";\r\n                    if (HeroBanner.canUseWebP()) {\r\n                        bannerImage = bannerAry[i]['image'];\r\n                    } else {\r\n                        bannerImage = bannerAry[i]['image'].replace('.webp', '.jpg');\r\n                    }\r\n                    let appendBanner = document.createElement('div');\r\n                    appendBanner.className = device + \"_wrapper\";\r\n                    let appendImage = document.createElement('img');\r\n                    appendImage.src = bannerImage;\r\n                    appendImage.alt = \"bannerImage\";\r\n                    appendBanner.appendChild(appendImage)\r\n                    appendBanner.addEventListener('click', function () {\r\n                        window.open(bannerAry[i]['link'], '_self');\r\n                    });\r\n                    thisBanner.element.children[0].children[i].appendChild(appendBanner);\r\n                }\r\n            })\r\n            .then(function () {\r\n                if (thisBanner.getFirst) {\r\n                    thisBanner.getFirst = false;\r\n                } else {\r\n                    // 함수 실행\r\n                    thisBanner.navMaker();\r\n                    if (thisBanner.autoSlide) thisBanner.autoSlideEvent();\r\n                    thisBanner.swipeEvent();\r\n\r\n                    getWindowSize();\r\n                    window.addEventListener(\"resize\", getWindowSize);\r\n                }\r\n            }).catch(function (err) {\r\n                // Error :(\r\n            });\r\n\r\n        function getWindowSize() {\r\n            let desktopWrapper = document.querySelectorAll('.desktop_wrapper');\r\n            let mobileWrapper = document.querySelectorAll('.mobile_wrapper');\r\n            let bannerWidth = null;\r\n\r\n            // 브라우저 사이즈가 640보다 크면  데스크탑 이미지가 보이게, 640보다 작으면 모바일 이미지가 보이게 함.\r\n            // 브라우저 사이즈가 640보다 크면 좌우 화살표 보이게, 640보다 작으면 보이지 않게 함.\r\n            // 1180보다 크게되면 여백을 위해 1180에 고정.\r\n            if (window.outerWidth > 640) {\r\n                if (window.outerWidth > 1180) {\r\n                    bannerWidth = 1180;\r\n                } else {\r\n                    bannerWidth = thisBanner.element.clientWidth;\r\n                }\r\n\r\n                for (let i = 0; i < desktopWrapper.length; i++) {\r\n                    desktopWrapper[i].style.display = \"block\";\r\n                    mobileWrapper[i].style.display = \"none\";\r\n                }\r\n\r\n                thisBanner.element.children[1].children[0].style.display = 'block';\r\n                thisBanner.element.onmouseover = () => {\r\n                    thisBanner.element.children[1].children[0].style.opacity = '1';\r\n                    thisBanner.element.children[1].children[0].style.visibility = 'visible';\r\n                };\r\n                thisBanner.element.onmouseout = () => {\r\n                    thisBanner.element.children[1].children[0].style.opacity = '0';\r\n                    thisBanner.element.children[1].children[0].style.visibility = 'hidden';\r\n                }\r\n            } else {\r\n                for (let i = 0; i < mobileWrapper.length; i++) {\r\n                    desktopWrapper[i].style.display = \"none\";\r\n                    mobileWrapper[i].style.display = \"block\";\r\n                }\r\n\r\n                bannerWidth = thisBanner.element.clientWidth;\r\n\r\n                thisBanner.element.children[1].children[0].style.display = 'none';\r\n            }\r\n\r\n            /*\r\n             기초 세팅\r\n             thisBanner.element.children[0] -> .banner-wrapper\r\n             배너의 전체 너비를 현재 브라우저 너비에 총 배너 개수만큼 곱하여 구한다.\r\n             */\r\n            thisBanner.element.children[0].style.width = `${bannerWidth * thisBanner.element.children[0].children.length}px`;\r\n            /*\r\n             기초 세팅\r\n             각 배너의 너비를 현재 브라우저 너비에 맞춘다.\r\n             */\r\n            for (let i = 0; i < thisBanner.element.children[0].children.length; i++) {\r\n                thisBanner.element.children[0].children[i].style.width = `${bannerWidth}px`;\r\n            }\r\n\r\n            // 브라우저 크기를 resize할 때 그에 맞춰 x축 위치를 변경하기 위함.\r\n            thisBanner.element.children[0].style['transform'] = `translateX(-${bannerWidth * thisBanner.BannerIndex}px)`;\r\n            thisBanner.element.children[0].style['msTransform'] = `translateX(-${bannerWidth * thisBanner.BannerIndex}px)`;\r\n            thisBanner.element.children[0].style['MozTransform'] = `translateX(-${bannerWidth * thisBanner.BannerIndex}px)`;\r\n            thisBanner.element.children[0].style['WebkitTransform'] = `translateX(-${bannerWidth * thisBanner.BannerIndex}px)`;\r\n            // 배너가 translate될 때는 300ms이지만 resize할 때만 배너 이미지의 크기 이상 문제 때문에 0ms로 변경함.\r\n            thisBanner.element.children[0].style.transitionDuration = '0ms';\r\n        }\r\n    }\r\n\r\n    // 네비게이션 생성\r\n    navMaker() {\r\n        /*\r\n         기초 세팅\r\n         thisBanner.element.children[1] -> .nav-wrapper\r\n         */\r\n\r\n        if (this.navStyle === 'arrow') {\r\n            let appendArrow = document.createElement('div');\r\n            appendArrow.className = \"nav-arrow\";\r\n            appendArrow.innerHTML = `<div class=\"nav-arrow-left\">Left</div><div class=\"nav-arrow-right\">Right</div>`;\r\n            this.element.children[1].appendChild(appendArrow);\r\n\r\n            // 왼쪽 화살표를 눌렀을 때\r\n            this.element.children[1].children[0].children[0].onclick = () => {\r\n                // 화살표 클릭 시 자동슬라이드 멈춤\r\n                if (this.autoSlide) clearInterval(this.autoSlideStatus);\r\n\r\n                // 현재 배너의 인덱스가 0보다 작으면 가장 마지막 배너로 이동하고 그게 아니면 이전 배너로 이동\r\n                if (this.infinity) this.BannerIndex = this.BannerIndex <= 0 ? this.element.children[0].children.length - 1 : this.BannerIndex - 1;\r\n                else this.BannerIndex = this.BannerIndex <= 0 ? 0 : this.BannerIndex - 1;\r\n\r\n                this.moveAction(this.BannerIndex);\r\n            };\r\n\r\n            // 오른쪽 화살표를 눌렀을 때\r\n            this.element.children[1].children[0].children[1].onclick = () => {\r\n                // 화살표 클릭 시 자동슬라이드 멈춤\r\n                if (this.autoSlide) clearInterval(this.autoSlideStatus);\r\n\r\n                // 현재 배너의 인덱스가 총 배너 수와 같거나 크면 가장 처음 배너로 이동하고 그게 아니면 다음 배너로 이동\r\n                if (this.infinity) this.BannerIndex = this.BannerIndex >= this.element.children[0].children.length - 1 ? 0 : this.BannerIndex + 1;\r\n                else this.BannerIndex = this.BannerIndex = this.BannerIndex >= this.element.children[0].children.length - 1 ? this.BannerIndex : this.BannerIndex + 1;\r\n\r\n                this.moveAction(this.BannerIndex);\r\n            }\r\n        } else if (this.navStyle === 'dot') {\r\n            let appendDot = document.createElement('div');\r\n            appendDot.className = \"nav-dot\";\r\n            let appendNav = '';\r\n            for (let i = 0; i < this.element.children[0].children.length; i++) {\r\n                if (i === 0) {\r\n                    appendNav += `<span class=\"nav-on\"></span>`;\r\n                } else {\r\n                    appendNav += \"<span></span>\";\r\n                }\r\n            }\r\n            appendDot.innerHTML = appendNav;\r\n            this.element.children[1].appendChild(appendDot);\r\n\r\n            for (let i = 0; i < this.element.children[1].children[0].children.length; i++) {\r\n                // dot를 눌렀을 때 해당 배너로 이동\r\n                this.element.children[1].children[0].children[i].addEventListener('click', () => { // click event register\r\n                    // dot 클릭 시 자동슬라이드 멈춤\r\n                    if (this.autoSlide) clearInterval(this.autoSlideStatus);\r\n                    this.BannerIndex = i;\r\n                    this.moveAction(i);\r\n                });\r\n            }\r\n        } else {\r\n            let appendArrow = document.createElement('div');\r\n            appendArrow.className = \"nav-arrow\";\r\n            appendArrow.innerHTML = `<div class=\"nav-arrow-left\">Left</div><div class=\"nav-arrow-right\">Right</div>`;\r\n            this.element.children[1].appendChild(appendArrow);\r\n\r\n            let appendDot = document.createElement('div');\r\n            appendDot.className = \"nav-dot\";\r\n            let appendNav = '';\r\n            for (let i = 0; i < this.element.children[0].children.length; i++) {\r\n                if (i === 0) {\r\n                    appendNav += `<span class=\"nav-on\"></span>`;\r\n                } else {\r\n                    appendNav += \"<span></span>\";\r\n                }\r\n            }\r\n            appendDot.innerHTML = appendNav;\r\n            this.element.children[1].appendChild(appendDot);\r\n\r\n            // navStyle을 지정하지 않으면 화살표와 dot모두 이용함.\r\n\r\n            // 왼쪽 화살표를 눌렀을 때\r\n            this.element.children[1].children[0].children[0].onclick = () => {\r\n                // 화살표 클릭 시 자동슬라이드 멈춤\r\n                if (this.autoSlide) clearInterval(this.autoSlideStatus);\r\n\r\n                // 현재 배너의 인덱스가 0보다 작으면 가장 마지막 배너로 이동하고 그게 아니면 이전 배너로 이동\r\n                if (this.infinity) this.BannerIndex = this.BannerIndex <= 0 ? this.element.children[0].children.length - 1 : this.BannerIndex - 1;\r\n                else this.BannerIndex = this.BannerIndex <= 0 ? 0 : this.BannerIndex - 1;\r\n\r\n                this.moveAction(this.BannerIndex);\r\n            };\r\n\r\n            // 오른쪽 화살표를 눌렀을 때\r\n            this.element.children[1].children[0].children[1].onclick = () => {\r\n                // 화살표 클릭 시 자동슬라이드 멈춤\r\n                if (this.autoSlide) clearInterval(this.autoSlideStatus);\r\n\r\n                // 현재 배너의 인덱스가 총 배너 수와 같거나 크면 가장 처음 배너로 이동하고 그게 아니면 다음 배너로 이동\r\n                if (this.infinity) this.BannerIndex = this.BannerIndex >= this.element.children[0].children.length - 1 ? 0 : this.BannerIndex + 1;\r\n                else this.BannerIndex = this.BannerIndex = this.BannerIndex >= this.element.children[0].children.length - 1 ? this.BannerIndex : this.BannerIndex + 1;\r\n\r\n                this.moveAction(this.BannerIndex);\r\n            };\r\n\r\n            for (let i = 0; i < this.element.children[1].children[1].children.length; i++) {\r\n                // dot를 눌렀을 때 해당 배너로 이동\r\n                this.element.children[1].children[1].children[i].addEventListener('click', () => { // click event register\r\n                    // dot 클릭 시 자동슬라이드 멈춤\r\n                    if (this.autoSlide) clearInterval(this.autoSlideStatus);\r\n                    this.BannerIndex = i;\r\n                    this.moveAction(i);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    // 자동슬라이드\r\n    autoSlideEvent() {\r\n        /*\r\n           - autoSlideTime만큼의 시간마다 자동슬라이드를 함\r\n           - 만약 배너의 인덱스가 총 배너 수와 같거나 크면 가장 처음 배너로 이동\r\n           - 배너 위에 마우스 진입 시 자동 슬라이드 멈춤\r\n           - 배너에서 마우스 벗어날 시 다시 자동 슬라이드 실행\r\n         */\r\n        this.autoSlideStatus = setInterval(() => {\r\n            if (this.infinity) {\r\n                if (this.BannerIndex >= this.element.children[0].children.length - 1) this.BannerIndex = 0;\r\n                else this.BannerIndex = this.BannerIndex + 1;\r\n            } else {\r\n                if (this.BannerIndex >= this.element.children[0].children.length - 1) this.BannerIndex = this.element.children[0].children.length - 1;\r\n                else this.BannerIndex = this.BannerIndex + 1;\r\n            }\r\n\r\n            this.moveAction(this.BannerIndex);\r\n        }, this.autoSlideTime);\r\n        this.element.addEventListener('mouseenter', () => { // mouse over\r\n            clearInterval(this.autoSlideStatus);\r\n        });\r\n        this.element.addEventListener('mouseleave', () => { // mouse out\r\n            this.autoSlideStatus = setInterval(() => {\r\n                if (this.infinity) {\r\n                    if (this.BannerIndex >= this.element.children[0].children.length - 1) this.BannerIndex = 0;\r\n                    else this.BannerIndex = this.BannerIndex + 1;\r\n                } else {\r\n                    if (this.BannerIndex >= this.element.children[0].children.length - 1) this.BannerIndex = this.element.children[0].children.length - 1;\r\n                    else this.BannerIndex = this.BannerIndex + 1;\r\n                }\r\n\r\n                this.moveAction(this.BannerIndex);\r\n            }, this.autoSlideTime);\r\n        })\r\n    }\r\n\r\n    // 스와이프 이벤트\r\n    swipeEvent() {\r\n        const thisBanner = this;\r\n        let initialX = null;\r\n\r\n        function initTouch(e) {\r\n            // 배너 클릭 시 자동슬라이드 멈춤\r\n            if (thisBanner.autoSlide) clearInterval(thisBanner.autoSlideStatus);\r\n\r\n            // 터치이벤트가 있으면 터치값에서 가져옴\r\n            initialX = `${e.touches ? e.touches[0].clientX : e.clientX}`;\r\n        }\r\n\r\n        function swipeDirection(e) {\r\n            if (initialX !== null) {\r\n                const currentX = `${e.touches ? e.touches[0].clientX : e.clientX}`;\r\n\r\n                let diffX = initialX - currentX;\r\n                if (diffX > 0) {\r\n                    // 현재 배너의 인덱스가 총 배너 수와 같거나 크면 가장 처음 배너로 이동하고 그게 아니면 다음 배너로 이동\r\n                    if (thisBanner.infinity) thisBanner.BannerIndex = thisBanner.BannerIndex >= thisBanner.element.children[0].children.length - 1 ? 0 : thisBanner.BannerIndex + 1;\r\n                    else thisBanner.BannerIndex = thisBanner.BannerIndex = thisBanner.BannerIndex >= thisBanner.element.children[0].children.length - 1 ? thisBanner.BannerIndex : thisBanner.BannerIndex + 1;\r\n\r\n                    thisBanner.moveAction(thisBanner.BannerIndex);\r\n                } else if (diffX < 0) {\r\n                    // 현재 배너의 인덱스가 0보다 작으면 가장 마지막 배너로 이동하고 그게 아니면 이전 배너로 이동\r\n                    if (thisBanner.infinity) thisBanner.BannerIndex = thisBanner.BannerIndex <= 0 ? thisBanner.element.children[0].children.length - 1 : thisBanner.BannerIndex - 1;\r\n                    else thisBanner.BannerIndex = thisBanner.BannerIndex <= 0 ? 0 : thisBanner.BannerIndex - 1;\r\n\r\n                    thisBanner.moveAction(thisBanner.BannerIndex);\r\n                }\r\n\r\n                initialX = null;\r\n            }\r\n        }\r\n\r\n        // 터치 눌렀을 때 시작 x좌표를 가져오는 이벤트\r\n        this.element.addEventListener(\"touchstart\", initTouch);\r\n        // 터치후 이동할 때 x좌표를 가져와서 서로 비교 후 배너를 이동시키는 이벤트\r\n        this.element.addEventListener(\"touchmove\", swipeDirection);\r\n        // 마우스 클릭을 했을 때 시작 x좌표를 가져오고 클릭을 한 상태에서 마우스 이동을 했을 때 x좌표를 가져와서 서로 비교 후 배너를 이동시키는 이벤트\r\n        this.element.addEventListener(\"mousedown\", (e) => {\r\n            initTouch(e), this.element.addEventListener(\"mousemove\", swipeDirection);\r\n        });\r\n        // 마우스 클릭을 뗐을  때 mousemove 이벤트를 삭제하여 더이상 이벤트가 발생하지 않게 함.\r\n        this.element.addEventListener(\"mouseup\", () => {\r\n            this.element.removeEventListener(\"mousemove\", swipeDirection);\r\n        });\r\n    }\r\n\r\n    // 배너이동 이벤트\r\n    moveAction(index) {\r\n        const thisBanner = this;\r\n\r\n        // 현재 브라우저의 너비에 이동하려는 인덱스만큼 곱하여 x위치를 좌측으로 이동하게함\r\n        this.element.children[0].style.transitionDuration = '300ms';\r\n        this.element.children[0].style['transform'] = `translateX(-${this.element.clientWidth * index}px)`;\r\n        this.element.children[0].style['msTransform'] = `translateX(-${this.element.clientWidth * index}px)`;\r\n        this.element.children[0].style['MozTransform'] = `translateX(-${this.element.clientWidth * index}px)`;\r\n        this.element.children[0].style['WebkitTransform'] = `translateX(-${this.element.clientWidth * index}px)`;\r\n\r\n        if (!this.navStyle) {\r\n            // navStyle을 지정하지 않아서 현재 배너 인덱스 dot의 하이라이트 처리를 this.element.children[1].children[1]에서 하게됨. (this.element.children[1].children[1]는 nav-arrow)\r\n            for (let i = 0; i < this.element.children[1].children[1].children.length; i++) { // nav-wrapper > spans nav-on remove\r\n                this.element.children[1].children[1].children[i].setAttribute('class', '');\r\n            }\r\n            this.element.children[1].children[1].children[index].setAttribute('class', 'nav-on'); // nav-wrapper > span nav-on add\r\n        } else if (this.navStyle === 'dot') {\r\n            for (let i = 0; i < this.element.children[1].children[0].children.length; i++) { // nav-wrapper > spans nav-on remove\r\n                this.element.children[1].children[0].children[i].setAttribute('class', '');\r\n            }\r\n            this.element.children[1].children[0].children[index].setAttribute('class', 'nav-on'); // nav-wrapper > span nav-on add\r\n        }\r\n        setTimeout(function () {\r\n            thisBanner.element.children[0].style.transitionDuration = '0ms';\r\n        }, 300);\r\n    }\r\n\r\n    // webp 확장자 지원여부 확인\r\n    static canUseWebP() {\r\n        let elem = document.createElement('canvas');\r\n\r\n        if (!!(elem.getContext && elem.getContext('2d'))) {\r\n            return elem.toDataURL('image/webp').indexOf('data:image/webp') === 0;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/js/hero_banner.js?");

/***/ })

/******/ });